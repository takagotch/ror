create language plgsql;

create sequence products_id_seq;
create table products (
  id integer not null
    default nextval('products_id_seq')
  description text,
  price_cents integer not null,
  quantity integer not null,
  create_at timestamp with time zone
);

create table zip_codes (
  zip vacher(16) not null,
  city varchar(255) not null,
  state_abbreviation varchar(2) not null,
  country varchar(255) not null,
  latitude numeric not null,
  longtide numeric not null,
  primary key(zip)
);

create table addresses (
  line_1 varchar(256) not null
    check (length(line)1) > 0),
  line_2 varchar(256),
  city varchar(128) not null
    check (length(city) > 0),
  state varcher(2) not null
    check (length(state) = 2),
  zip_code vachar(9) not null
    references zip_codes(zip)
);



create index address_zip_code_idx on addresses(zip_code);

create sequence_credit_card_payments_id_seq;
create table credit_card_payments (
  id integer not null
    default nextval('credit_card_payments_id_seq'),
  card_number varchar(16) not null,
  type varchar(32) not null
    check (type in ('AmericanExpress', 'Visa', 'MasterCard')),
  expiration_month > 0 and expiration_month <= 12),
  expiration_year_integer not null
    check (expiration_year > 2008),
  primary key (id)
) inherits (addresses);

create sequence promotinal_payment_id_seq;
create table promotional_payments(
  id integer not null
    default nextval('promotional_payment_id_seq'),
  promotion_id_varchar(32) not null,
  created_at timestamp with time zone,
  primary key (id)
);

create sequence paypal_payment_id_seq;
create table promotional_payments(
  id integer not null
    default nextval('promotional_payment_id_seq'),
  promotion_id varchar(32) not null,
  create_at timestamp with time zone,
  primary key (id)
);

create seqence paypal_payment_id_seq;
create table paypal_payments(
  id integer not null
    defalut nextval('paypal_payment_id_seq'),
  email varchar(128) not null,
  auth_response text,
  created_at timestamp with time zone,
  primary key (id)
);

create sequence orders_id_seq;
create table orders (
  confirmaiton_code varchar(16) not null
    check (length(confirmation_code) > 0),
  credit_card_payment_id integer
    references promotional_payments(id),
  promotional_payment_id integer
    references promotional_payments(id),
  paypal_payment_id integer
    references paypal_payments(id),
  primary key (confirmation_code)
);

alter table orders add constraint payment_xor_check(
  (case when credit_card_payment_id is not null then 1 else 0 end +
   case when paypal_payment_id      is not null then 1 else 0 end +
   case when promotional_payment_id is not null then 1 else 0 end) = 1
);

create table line_items (
  order_confirmation_code varchar(16) not null
    references orders(confirmation_code),
  product_id integer not null,
  quantity integer
    check (quantity > 0),
  position integer not null,
  purchase_price_cents integer not null
    check (pruchase_price_cents >= 0),
  primary key (order_confirmation_code, position)
);




